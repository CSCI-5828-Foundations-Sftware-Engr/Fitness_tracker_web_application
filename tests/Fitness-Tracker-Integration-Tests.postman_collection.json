{
	"info": {
		"_postman_id": "de19fd11-2f92-42cc-ae52-acc2a55377b8",
		"name": "Fitness-Tracker-Integration-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27180869",
		"_collection_link": "https://orange-astronaut-903755.postman.co/workspace/77872bda-6451-4d2c-8f5b-d6178cc1ce8c/collection/27180869-de19fd11-2f92-42cc-ae52-acc2a55377b8?action=share&creator=27180869&source=collection_link"
	},
	"item": [
		{
			"name": "Signup",
			"item": [
				{
					"name": "integration_test_signup_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Succesful write to register db\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"integrationtest1\", \"email\": \"integrationtest1@example.com\", \"password\": \"integrationtest1\", \"contactNumber\": \"1234567890\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/signup",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_signup_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"There already is a user by that name\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"integrationtest1\", \"email\": \"integrationtest1@example.com\", \"password\": \"integrationtest1\", \"contactNumber\": \"1234567890\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/signup",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_signup_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This email already exists in database\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"integrationtest2\", \"email\": \"integrationtest1@example.com\", \"password\": \"integrationtest1\", \"contactNumber\": \"1234567890\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/signup",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_signup_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Received a non-Post request\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"integrationtest1\", \"email\": \"integrationtest1@example.com\", \"password\": \"integrationtest1\", \"contactNumber\": \"1234567890\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/signup",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "integration_test_login_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Password matched\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"email\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"phone\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"username\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"email\",\r",
									"    \"message\",\r",
									"    \"phone\",\r",
									"    \"username\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"admin\", \"password\": \"admin\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/login",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_login_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Wrong password\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"admin\", \"password\": \"password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/login",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_login_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"adminstrator\", \"password\": \"admin\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/login",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workout",
			"item": [
				{
					"name": "integration_test_workout_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"username\": \"adminstrator\", \"date\" : \"04/20/2023\", \"total_steps\": 2130, \"calories_spent\": 610, \"weight_measured\": 60}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/workout",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"workout"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_workout_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Succesful write to Workout db\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"username\": \"admin\", \"date\" : \"04/2/2023\", \"total_steps\": 2130, \"calories_spent\": 610, \"weight_measured\": 60}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/workout",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"workout"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_workout_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Received a non-Post request\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"username\": \"admin\", \"date\" : \"04/2/2023\", \"total_steps\": 2130, \"calories_spent\": 610, \"weight_measured\": 60}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/workout",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"workout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Nutrition",
			"item": [
				{
					"name": "integration_test_nutrition_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"adminstrator\",\r\n    \"date\" : \"04/20/2023\",\r\n    \"calorie_intake\": 2130,\r\n    \"protein\": 60,\r\n    \"carbs\": 30,\r\n    \"fat\": 10,\r\n    \"water_intake\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/nutrition",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"nutrition"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_nutrition_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Succesful write to Nutrition db\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"date\" : \"04/20/2023\",\r\n    \"calorie_intake\": 2130,\r\n    \"protein\": 60,\r\n    \"carbs\": 30,\r\n    \"fat\": 10,\r\n    \"water_intake\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/nutrition",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"nutrition"
							]
						}
					},
					"response": []
				},
				{
					"name": "integration_test_nutrition_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the output string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Received a non-Post request\");\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"code\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"code\",\r",
									"    \"message\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test('Response Schema Validation', function () {\r",
									"    var result = tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"adminstrator\",\r\n    \"date\" : \"04/20/2023\",\r\n    \"calorie_intake\": 2130,\r\n    \"protein\": 60,\r\n    \"carbs\": 30,\r\n    \"fat\": 10,\r\n    \"water_intake\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fitness-tracker-staging.herokuapp.com/nutrition",
							"protocol": "https",
							"host": [
								"fitness-tracker-staging",
								"herokuapp",
								"com"
							],
							"path": [
								"nutrition"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}